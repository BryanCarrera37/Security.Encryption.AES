name: Release NuGet Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/Security.Encryption.AES

    outputs:
      version: ${{ steps.gitversion.outputs.nuGetVersionV2 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v1
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v1

      - name: Restore dependencies
        run: dotnet restore

      - name: Build with version
        run: dotnet build --configuration Release /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }} /p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }} /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: src/Security.Encryption.AES.Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    defaults:
      run:
        working-directory: src/Security.Encryption.AES

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v1
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v1

      - name: Pack NuGet package
        run: dotnet pack -c Release /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }} /p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }} /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}

      - name: Push to NuGet
        run: dotnet nuget push bin/Release/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
